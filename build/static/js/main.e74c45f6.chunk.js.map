{"version":3,"sources":["Component/TodoListItems.js","Api.js","constant.js","App.js","index.js"],"names":["TodoListItems","props","classes","makeStyles","theme","list","overflow","breakpoints","up","maxHeight","down","lineThough","textDecoration","useStyles","handleToggle","value","status","updateTodo","duration","easing","List","className","todoList","Array","isArray","filter","todo","map","Fragment","ListItem","role","undefined","dense","button","onClick","ListItemIcon","Checkbox","edge","color","checked","tabIndex","disableRipple","ListItemText","id","primary","name","ListItemSecondaryAction","IconButton","aria-label","e","removeTodo","Divider","baseUrl","getTodos","a","axios","get","data","Error","addTodo","newTodoName","post","saveTodo","deleteTodo","delete","message","App","useState","input","setInput","setTodoList","setMessage","React","open","setOpen","useEffect","fetchTodos","then","todos","catch","err","console","log","root","flexGrow","height","width","margin","spacing","card","cardHeader","todoForm","textInput","cardContent","paddingTop","paddingBottom","preventDefault","modifyTodo","Grid","container","direction","alignItems","justify","Snackbar","anchorOrigin","vertical","horizontal","onClose","event","reason","autoHideDuration","Card","CardHeader","title","noValidate","autoComplete","onSubmit","item","xl","FormControl","clsx","textField","variant","OutlinedInput","placeholder","onChange","target","labelWidth","Button","type","disabled","length","CardContent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e74c45f6.chunk.js","sourcesContent":["import React from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemSecondaryAction,\r\n  Checkbox,\r\n  IconButton,\r\n  ListItemText,\r\n  Divider,\r\n} from '@material-ui/core';\r\nimport FlipMove from 'react-flip-move';\r\n\r\nexport default function TodoListItems(props) {\r\n  const useStyles = makeStyles((theme) => ({\r\n    list: {\r\n      overflow: \"auto\",\r\n      [theme.breakpoints.up(780)]: {\r\n        maxHeight: 180,\r\n      },\r\n      [theme.breakpoints.down(780)]: {\r\n        maxHeight: 180,\r\n      },\r\n    },\r\n    lineThough: {\r\n      textDecoration: \"line-through\",\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleToggle = (value) => () => {\r\n    value.status = value.status === 'ACTIVE' ? 'INACTIVE' : 'ACTIVE';\r\n    props.updateTodo(value);\r\n  };\r\n\r\n  return (\r\n    <FlipMove duration={1000} easing='ease-in-out'>\r\n      <List className={classes.list}>\r\n        {props.todoList && Array.isArray(props.todoList)\r\n          ? props.todoList.filter((todo) => todo.status === props.status).map((value) => (\r\n              <React.Fragment key={value.id}>\r\n                <ListItem\r\n                  key={value.id}\r\n                  role={undefined}\r\n                  dense\r\n                  button\r\n                  onClick={handleToggle(value)}\r\n                >\r\n                  <ListItemIcon>\r\n                    <Checkbox\r\n                      edge='start'\r\n                      color='primary'\r\n                      checked={value.status === 'INACTIVE'}\r\n                      tabIndex={-1}\r\n                      disableRipple\r\n                    />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    id={`${value.id}-text`}\r\n                    primary={value.name}\r\n                    className={\r\n                      value.status === 'INACTIVE' ? classes.lineThough : ''\r\n                    }\r\n                  />\r\n                  <ListItemSecondaryAction>\r\n                    <IconButton\r\n                      edge='end'\r\n                      aria-label='delete'\r\n                      color='primary'\r\n                      onClick={(e) => props.removeTodo(e, value.id)}\r\n                    >\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n                <Divider key={`${value.id}-divider`} />\r\n              </React.Fragment>\r\n            ))\r\n          : 'No Todo Found'}\r\n      </List>\r\n    </FlipMove>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport { env } from './constant';\r\n\r\nconst baseUrl = env.BASE_URL;\r\n\r\nexport const getTodos = async () => {\r\n  try {\r\n    const todo = await axios.get(baseUrl + 'todo');\r\n    return todo && todo.data ? todo.data : [];\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const addTodo = async (newTodoName) => {\r\n  try {\r\n    const todo = {\r\n      todo: newTodoName,\r\n    };\r\n    const saveTodo = await axios.post(baseUrl + 'todo', todo);\r\n    return saveTodo;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const updateTodo = async (todo) => {\r\n  try {\r\n    const updateTodo = await axios.post(baseUrl + 'todo/' + todo.id, todo);\r\n    return updateTodo;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const deleteTodo = async (id) => {\r\n  try {\r\n    const message = await axios.delete(baseUrl + 'todo/' + id);\r\n    return message;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n","export const env = {\r\n  BASE_URL: 'https://todolistapp-developer.herokuapp.com/',\r\n};\r\n","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport TodoListItems from './Component/TodoListItems';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Grid,\n  CardContent,\n  Card,\n  OutlinedInput,\n  CardHeader,\n  Button,\n  FormControl,\n  Snackbar,\n} from '@material-ui/core';\nimport clsx from 'clsx';\nimport { getTodos, addTodo, deleteTodo, updateTodo } from './Api';\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [todoList, setTodoList] = useState([]);\n  const [message, setMessage] = useState('');\n  const [open, setOpen] = React.useState(false);\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = () => {\n    getTodos()\n      .then((todos) => {\n        setTodoList(todos);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      height: '100%',\n      width: '100%',\n      '& > *': {\n        margin: theme.spacing(1),\n        width: '25ch',\n      },\n    },\n    card: {\n      // width: 500,\n      // height: 500,\n      [theme.breakpoints.up(780)]: {\n        width: 600,\n        height: '100%',\n      },\n      [theme.breakpoints.down(780)]: {\n        width: '100%',\n        height: '100%',\n      },\n      border: '0!important',\n      boxShadow: '0 0 2rem 0 rgba(136, 152, 170,.15)!important',\n      textAlign: 'center',\n    },\n    cardHeader: {\n      [theme.breakpoints.up(780)]: {\n        width: 600,\n      },\n      [theme.breakpoints.down(780)]: {\n        width: '100%',\n        height: '100%',\n      },\n      textAlign: 'center',\n    },\n    todoForm: {\n      // width: '100%',\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    textInput: {\n      // width: '100%',\n    },\n    cardContent: {\n      paddingTop: 0,\n      paddingBottom: '12px !important',\n    },\n    list: {\n      paddingBottom: '12px !important',\n    },\n  }));\n\n  const classes = useStyles();\n\n  const addNewTodo = (e) => {\n    e.preventDefault();\n    addTodo(input)\n      .then((data) => {\n        fetchTodos();\n        setMessage('New Todo Added');\n        setOpen(true);\n        setInput('');\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const removeTodo = (e, id) => {\n    e.preventDefault();\n    deleteTodo(id)\n      .then((data) => {\n        fetchTodos();\n        setMessage('Todo Removed');\n        setOpen(true);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const modifyTodo = (todo) => {\n    updateTodo(todo)\n      .then((data) => {\n        fetchTodos();\n        setMessage('Todo Updated');\n        setOpen(true);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  return (\n    <Grid\n      container\n      spacing={0}\n      direction='column'\n      alignItems='center'\n      justify='center'\n      className={classes.root}\n    >\n      {message ? (\n        <Snackbar\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n          open={open}\n          onClose={handleClose}\n          autoHideDuration={1000}\n          message={message}\n          key='snack-bar'\n        />\n      ) : null}\n      <Card className={classes.cardHeader}>\n        <CardHeader title='Todo List App' className={classes.list} />\n        <form\n          id='todo-input-form'\n          className={classes.todoForm}\n          noValidate\n          autoComplete='off'\n          onSubmit={addNewTodo}\n        >\n          <Grid container spacing={0} alignItems='center' justify='center'>\n            <Grid item xl={8}>\n              <FormControl\n                className={clsx(classes.margin, classes.textField)}\n                variant='outlined'\n              >\n                <OutlinedInput\n                  id='outlined-basic'\n                  variant='outlined'\n                  placeholder='Enter Note'\n                  value={input}\n                  onChange={(e) => setInput(e.target.value)}\n                  labelWidth={0}\n                  className={classes.textInput}\n                />\n              </FormControl>\n            </Grid>\n            <Grid item xl={2}>\n              <FormControl>\n                <Button\n                  variant='contained'\n                  type='submit'\n                  color='primary'\n                  disabled={input.length === 0}\n                >\n                  Add\n                </Button>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </form>\n      </Card>\n      <Card className={classes.card}>\n        <CardHeader title='Todo Task' />\n        <CardContent className={classes.cardContent}>\n          <TodoListItems\n            todoList={todoList}\n            removeTodo={removeTodo}\n            updateTodo={modifyTodo}\n            status='ACTIVE'\n            className={classes.list}\n          ></TodoListItems>\n        </CardContent>\n      </Card>\n      <Card className={classes.card}>\n        <CardHeader title='Completed Task' />\n        <CardContent className={classes.cardContent}>\n          <TodoListItems\n            todoList={todoList}\n            removeTodo={removeTodo}\n            updateTodo={modifyTodo}\n            status='INACTIVE'\n            className={classes.list}\n          ></TodoListItems>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}